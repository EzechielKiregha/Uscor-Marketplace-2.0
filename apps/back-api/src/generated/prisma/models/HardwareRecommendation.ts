
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `HardwareRecommendation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model HardwareRecommendation
 * 
 */
export type HardwareRecommendationModel = runtime.Types.Result.DefaultSelection<Prisma.$HardwareRecommendationPayload>

export type AggregateHardwareRecommendation = {
  _count: HardwareRecommendationCountAggregateOutputType | null
  _min: HardwareRecommendationMinAggregateOutputType | null
  _max: HardwareRecommendationMaxAggregateOutputType | null
}

export type HardwareRecommendationMinAggregateOutputType = {
  id: string | null
  type: string | null
  model: string | null
  description: string | null
  priceRange: string | null
  localSupplier: string | null
  setupGuideUrl: string | null
  businessType: string | null
  country: $Enums.Country | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type HardwareRecommendationMaxAggregateOutputType = {
  id: string | null
  type: string | null
  model: string | null
  description: string | null
  priceRange: string | null
  localSupplier: string | null
  setupGuideUrl: string | null
  businessType: string | null
  country: $Enums.Country | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type HardwareRecommendationCountAggregateOutputType = {
  id: number
  type: number
  model: number
  description: number
  priceRange: number
  localSupplier: number
  setupGuideUrl: number
  businessType: number
  country: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type HardwareRecommendationMinAggregateInputType = {
  id?: true
  type?: true
  model?: true
  description?: true
  priceRange?: true
  localSupplier?: true
  setupGuideUrl?: true
  businessType?: true
  country?: true
  createdAt?: true
  updatedAt?: true
}

export type HardwareRecommendationMaxAggregateInputType = {
  id?: true
  type?: true
  model?: true
  description?: true
  priceRange?: true
  localSupplier?: true
  setupGuideUrl?: true
  businessType?: true
  country?: true
  createdAt?: true
  updatedAt?: true
}

export type HardwareRecommendationCountAggregateInputType = {
  id?: true
  type?: true
  model?: true
  description?: true
  priceRange?: true
  localSupplier?: true
  setupGuideUrl?: true
  businessType?: true
  country?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type HardwareRecommendationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which HardwareRecommendation to aggregate.
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HardwareRecommendations to fetch.
   */
  orderBy?: Prisma.HardwareRecommendationOrderByWithRelationInput | Prisma.HardwareRecommendationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.HardwareRecommendationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HardwareRecommendations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HardwareRecommendations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned HardwareRecommendations
  **/
  _count?: true | HardwareRecommendationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: HardwareRecommendationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: HardwareRecommendationMaxAggregateInputType
}

export type GetHardwareRecommendationAggregateType<T extends HardwareRecommendationAggregateArgs> = {
      [P in keyof T & keyof AggregateHardwareRecommendation]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateHardwareRecommendation[P]>
    : Prisma.GetScalarType<T[P], AggregateHardwareRecommendation[P]>
}




export type HardwareRecommendationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.HardwareRecommendationWhereInput
  orderBy?: Prisma.HardwareRecommendationOrderByWithAggregationInput | Prisma.HardwareRecommendationOrderByWithAggregationInput[]
  by: Prisma.HardwareRecommendationScalarFieldEnum[] | Prisma.HardwareRecommendationScalarFieldEnum
  having?: Prisma.HardwareRecommendationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: HardwareRecommendationCountAggregateInputType | true
  _min?: HardwareRecommendationMinAggregateInputType
  _max?: HardwareRecommendationMaxAggregateInputType
}

export type HardwareRecommendationGroupByOutputType = {
  id: string
  type: string
  model: string | null
  description: string | null
  priceRange: string | null
  localSupplier: string | null
  setupGuideUrl: string | null
  businessType: string | null
  country: $Enums.Country | null
  createdAt: Date
  updatedAt: Date
  _count: HardwareRecommendationCountAggregateOutputType | null
  _min: HardwareRecommendationMinAggregateOutputType | null
  _max: HardwareRecommendationMaxAggregateOutputType | null
}

type GetHardwareRecommendationGroupByPayload<T extends HardwareRecommendationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<HardwareRecommendationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof HardwareRecommendationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], HardwareRecommendationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], HardwareRecommendationGroupByOutputType[P]>
      }
    >
  >



export type HardwareRecommendationWhereInput = {
  AND?: Prisma.HardwareRecommendationWhereInput | Prisma.HardwareRecommendationWhereInput[]
  OR?: Prisma.HardwareRecommendationWhereInput[]
  NOT?: Prisma.HardwareRecommendationWhereInput | Prisma.HardwareRecommendationWhereInput[]
  id?: Prisma.StringFilter<"HardwareRecommendation"> | string
  type?: Prisma.StringFilter<"HardwareRecommendation"> | string
  model?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  description?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  priceRange?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  localSupplier?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  setupGuideUrl?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  businessType?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  country?: Prisma.EnumCountryNullableFilter<"HardwareRecommendation"> | $Enums.Country | null
  createdAt?: Prisma.DateTimeFilter<"HardwareRecommendation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"HardwareRecommendation"> | Date | string
}

export type HardwareRecommendationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  model?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  priceRange?: Prisma.SortOrderInput | Prisma.SortOrder
  localSupplier?: Prisma.SortOrderInput | Prisma.SortOrder
  setupGuideUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  businessType?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type HardwareRecommendationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.HardwareRecommendationWhereInput | Prisma.HardwareRecommendationWhereInput[]
  OR?: Prisma.HardwareRecommendationWhereInput[]
  NOT?: Prisma.HardwareRecommendationWhereInput | Prisma.HardwareRecommendationWhereInput[]
  type?: Prisma.StringFilter<"HardwareRecommendation"> | string
  model?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  description?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  priceRange?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  localSupplier?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  setupGuideUrl?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  businessType?: Prisma.StringNullableFilter<"HardwareRecommendation"> | string | null
  country?: Prisma.EnumCountryNullableFilter<"HardwareRecommendation"> | $Enums.Country | null
  createdAt?: Prisma.DateTimeFilter<"HardwareRecommendation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"HardwareRecommendation"> | Date | string
}, "id">

export type HardwareRecommendationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  model?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  priceRange?: Prisma.SortOrderInput | Prisma.SortOrder
  localSupplier?: Prisma.SortOrderInput | Prisma.SortOrder
  setupGuideUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  businessType?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.HardwareRecommendationCountOrderByAggregateInput
  _max?: Prisma.HardwareRecommendationMaxOrderByAggregateInput
  _min?: Prisma.HardwareRecommendationMinOrderByAggregateInput
}

export type HardwareRecommendationScalarWhereWithAggregatesInput = {
  AND?: Prisma.HardwareRecommendationScalarWhereWithAggregatesInput | Prisma.HardwareRecommendationScalarWhereWithAggregatesInput[]
  OR?: Prisma.HardwareRecommendationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.HardwareRecommendationScalarWhereWithAggregatesInput | Prisma.HardwareRecommendationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"HardwareRecommendation"> | string
  type?: Prisma.StringWithAggregatesFilter<"HardwareRecommendation"> | string
  model?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  description?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  priceRange?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  localSupplier?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  setupGuideUrl?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  businessType?: Prisma.StringNullableWithAggregatesFilter<"HardwareRecommendation"> | string | null
  country?: Prisma.EnumCountryNullableWithAggregatesFilter<"HardwareRecommendation"> | $Enums.Country | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"HardwareRecommendation"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"HardwareRecommendation"> | Date | string
}

export type HardwareRecommendationCreateInput = {
  id?: string
  type: string
  model?: string | null
  description?: string | null
  priceRange?: string | null
  localSupplier?: string | null
  setupGuideUrl?: string | null
  businessType?: string | null
  country?: $Enums.Country | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type HardwareRecommendationUncheckedCreateInput = {
  id?: string
  type: string
  model?: string | null
  description?: string | null
  priceRange?: string | null
  localSupplier?: string | null
  setupGuideUrl?: string | null
  businessType?: string | null
  country?: $Enums.Country | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type HardwareRecommendationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceRange?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  localSupplier?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  setupGuideUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableEnumCountryFieldUpdateOperationsInput | $Enums.Country | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HardwareRecommendationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceRange?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  localSupplier?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  setupGuideUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableEnumCountryFieldUpdateOperationsInput | $Enums.Country | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HardwareRecommendationCreateManyInput = {
  id?: string
  type: string
  model?: string | null
  description?: string | null
  priceRange?: string | null
  localSupplier?: string | null
  setupGuideUrl?: string | null
  businessType?: string | null
  country?: $Enums.Country | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type HardwareRecommendationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceRange?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  localSupplier?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  setupGuideUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableEnumCountryFieldUpdateOperationsInput | $Enums.Country | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HardwareRecommendationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceRange?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  localSupplier?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  setupGuideUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableEnumCountryFieldUpdateOperationsInput | $Enums.Country | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HardwareRecommendationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  model?: Prisma.SortOrder
  description?: Prisma.SortOrder
  priceRange?: Prisma.SortOrder
  localSupplier?: Prisma.SortOrder
  setupGuideUrl?: Prisma.SortOrder
  businessType?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type HardwareRecommendationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  model?: Prisma.SortOrder
  description?: Prisma.SortOrder
  priceRange?: Prisma.SortOrder
  localSupplier?: Prisma.SortOrder
  setupGuideUrl?: Prisma.SortOrder
  businessType?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type HardwareRecommendationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  model?: Prisma.SortOrder
  description?: Prisma.SortOrder
  priceRange?: Prisma.SortOrder
  localSupplier?: Prisma.SortOrder
  setupGuideUrl?: Prisma.SortOrder
  businessType?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type NullableEnumCountryFieldUpdateOperationsInput = {
  set?: $Enums.Country | null
}



export type HardwareRecommendationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  model?: boolean
  description?: boolean
  priceRange?: boolean
  localSupplier?: boolean
  setupGuideUrl?: boolean
  businessType?: boolean
  country?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["hardwareRecommendation"]>

export type HardwareRecommendationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  model?: boolean
  description?: boolean
  priceRange?: boolean
  localSupplier?: boolean
  setupGuideUrl?: boolean
  businessType?: boolean
  country?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["hardwareRecommendation"]>

export type HardwareRecommendationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  model?: boolean
  description?: boolean
  priceRange?: boolean
  localSupplier?: boolean
  setupGuideUrl?: boolean
  businessType?: boolean
  country?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["hardwareRecommendation"]>

export type HardwareRecommendationSelectScalar = {
  id?: boolean
  type?: boolean
  model?: boolean
  description?: boolean
  priceRange?: boolean
  localSupplier?: boolean
  setupGuideUrl?: boolean
  businessType?: boolean
  country?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type HardwareRecommendationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type" | "model" | "description" | "priceRange" | "localSupplier" | "setupGuideUrl" | "businessType" | "country" | "createdAt" | "updatedAt", ExtArgs["result"]["hardwareRecommendation"]>

export type $HardwareRecommendationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "HardwareRecommendation"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: string
    model: string | null
    description: string | null
    priceRange: string | null
    localSupplier: string | null
    setupGuideUrl: string | null
    businessType: string | null
    country: $Enums.Country | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["hardwareRecommendation"]>
  composites: {}
}

export type HardwareRecommendationGetPayload<S extends boolean | null | undefined | HardwareRecommendationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload, S>

export type HardwareRecommendationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<HardwareRecommendationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: HardwareRecommendationCountAggregateInputType | true
  }

export interface HardwareRecommendationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HardwareRecommendation'], meta: { name: 'HardwareRecommendation' } }
  /**
   * Find zero or one HardwareRecommendation that matches the filter.
   * @param {HardwareRecommendationFindUniqueArgs} args - Arguments to find a HardwareRecommendation
   * @example
   * // Get one HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends HardwareRecommendationFindUniqueArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one HardwareRecommendation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {HardwareRecommendationFindUniqueOrThrowArgs} args - Arguments to find a HardwareRecommendation
   * @example
   * // Get one HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends HardwareRecommendationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first HardwareRecommendation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationFindFirstArgs} args - Arguments to find a HardwareRecommendation
   * @example
   * // Get one HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends HardwareRecommendationFindFirstArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationFindFirstArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first HardwareRecommendation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationFindFirstOrThrowArgs} args - Arguments to find a HardwareRecommendation
   * @example
   * // Get one HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends HardwareRecommendationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more HardwareRecommendations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all HardwareRecommendations
   * const hardwareRecommendations = await prisma.hardwareRecommendation.findMany()
   * 
   * // Get first 10 HardwareRecommendations
   * const hardwareRecommendations = await prisma.hardwareRecommendation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const hardwareRecommendationWithIdOnly = await prisma.hardwareRecommendation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends HardwareRecommendationFindManyArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a HardwareRecommendation.
   * @param {HardwareRecommendationCreateArgs} args - Arguments to create a HardwareRecommendation.
   * @example
   * // Create one HardwareRecommendation
   * const HardwareRecommendation = await prisma.hardwareRecommendation.create({
   *   data: {
   *     // ... data to create a HardwareRecommendation
   *   }
   * })
   * 
   */
  create<T extends HardwareRecommendationCreateArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationCreateArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many HardwareRecommendations.
   * @param {HardwareRecommendationCreateManyArgs} args - Arguments to create many HardwareRecommendations.
   * @example
   * // Create many HardwareRecommendations
   * const hardwareRecommendation = await prisma.hardwareRecommendation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends HardwareRecommendationCreateManyArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many HardwareRecommendations and returns the data saved in the database.
   * @param {HardwareRecommendationCreateManyAndReturnArgs} args - Arguments to create many HardwareRecommendations.
   * @example
   * // Create many HardwareRecommendations
   * const hardwareRecommendation = await prisma.hardwareRecommendation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many HardwareRecommendations and only return the `id`
   * const hardwareRecommendationWithIdOnly = await prisma.hardwareRecommendation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends HardwareRecommendationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a HardwareRecommendation.
   * @param {HardwareRecommendationDeleteArgs} args - Arguments to delete one HardwareRecommendation.
   * @example
   * // Delete one HardwareRecommendation
   * const HardwareRecommendation = await prisma.hardwareRecommendation.delete({
   *   where: {
   *     // ... filter to delete one HardwareRecommendation
   *   }
   * })
   * 
   */
  delete<T extends HardwareRecommendationDeleteArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationDeleteArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one HardwareRecommendation.
   * @param {HardwareRecommendationUpdateArgs} args - Arguments to update one HardwareRecommendation.
   * @example
   * // Update one HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends HardwareRecommendationUpdateArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationUpdateArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more HardwareRecommendations.
   * @param {HardwareRecommendationDeleteManyArgs} args - Arguments to filter HardwareRecommendations to delete.
   * @example
   * // Delete a few HardwareRecommendations
   * const { count } = await prisma.hardwareRecommendation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends HardwareRecommendationDeleteManyArgs>(args?: Prisma.SelectSubset<T, HardwareRecommendationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more HardwareRecommendations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many HardwareRecommendations
   * const hardwareRecommendation = await prisma.hardwareRecommendation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends HardwareRecommendationUpdateManyArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more HardwareRecommendations and returns the data updated in the database.
   * @param {HardwareRecommendationUpdateManyAndReturnArgs} args - Arguments to update many HardwareRecommendations.
   * @example
   * // Update many HardwareRecommendations
   * const hardwareRecommendation = await prisma.hardwareRecommendation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more HardwareRecommendations and only return the `id`
   * const hardwareRecommendationWithIdOnly = await prisma.hardwareRecommendation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends HardwareRecommendationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one HardwareRecommendation.
   * @param {HardwareRecommendationUpsertArgs} args - Arguments to update or create a HardwareRecommendation.
   * @example
   * // Update or create a HardwareRecommendation
   * const hardwareRecommendation = await prisma.hardwareRecommendation.upsert({
   *   create: {
   *     // ... data to create a HardwareRecommendation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the HardwareRecommendation we want to update
   *   }
   * })
   */
  upsert<T extends HardwareRecommendationUpsertArgs>(args: Prisma.SelectSubset<T, HardwareRecommendationUpsertArgs<ExtArgs>>): Prisma.Prisma__HardwareRecommendationClient<runtime.Types.Result.GetResult<Prisma.$HardwareRecommendationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of HardwareRecommendations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationCountArgs} args - Arguments to filter HardwareRecommendations to count.
   * @example
   * // Count the number of HardwareRecommendations
   * const count = await prisma.hardwareRecommendation.count({
   *   where: {
   *     // ... the filter for the HardwareRecommendations we want to count
   *   }
   * })
  **/
  count<T extends HardwareRecommendationCountArgs>(
    args?: Prisma.Subset<T, HardwareRecommendationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], HardwareRecommendationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a HardwareRecommendation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends HardwareRecommendationAggregateArgs>(args: Prisma.Subset<T, HardwareRecommendationAggregateArgs>): Prisma.PrismaPromise<GetHardwareRecommendationAggregateType<T>>

  /**
   * Group by HardwareRecommendation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HardwareRecommendationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends HardwareRecommendationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: HardwareRecommendationGroupByArgs['orderBy'] }
      : { orderBy?: HardwareRecommendationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, HardwareRecommendationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHardwareRecommendationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the HardwareRecommendation model
 */
readonly fields: HardwareRecommendationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for HardwareRecommendation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__HardwareRecommendationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the HardwareRecommendation model
 */
export interface HardwareRecommendationFieldRefs {
  readonly id: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly type: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly model: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly description: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly priceRange: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly localSupplier: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly setupGuideUrl: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly businessType: Prisma.FieldRef<"HardwareRecommendation", 'String'>
  readonly country: Prisma.FieldRef<"HardwareRecommendation", 'Country'>
  readonly createdAt: Prisma.FieldRef<"HardwareRecommendation", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"HardwareRecommendation", 'DateTime'>
}
    

// Custom InputTypes
/**
 * HardwareRecommendation findUnique
 */
export type HardwareRecommendationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter, which HardwareRecommendation to fetch.
   */
  where: Prisma.HardwareRecommendationWhereUniqueInput
}

/**
 * HardwareRecommendation findUniqueOrThrow
 */
export type HardwareRecommendationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter, which HardwareRecommendation to fetch.
   */
  where: Prisma.HardwareRecommendationWhereUniqueInput
}

/**
 * HardwareRecommendation findFirst
 */
export type HardwareRecommendationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter, which HardwareRecommendation to fetch.
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HardwareRecommendations to fetch.
   */
  orderBy?: Prisma.HardwareRecommendationOrderByWithRelationInput | Prisma.HardwareRecommendationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for HardwareRecommendations.
   */
  cursor?: Prisma.HardwareRecommendationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HardwareRecommendations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HardwareRecommendations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of HardwareRecommendations.
   */
  distinct?: Prisma.HardwareRecommendationScalarFieldEnum | Prisma.HardwareRecommendationScalarFieldEnum[]
}

/**
 * HardwareRecommendation findFirstOrThrow
 */
export type HardwareRecommendationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter, which HardwareRecommendation to fetch.
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HardwareRecommendations to fetch.
   */
  orderBy?: Prisma.HardwareRecommendationOrderByWithRelationInput | Prisma.HardwareRecommendationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for HardwareRecommendations.
   */
  cursor?: Prisma.HardwareRecommendationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HardwareRecommendations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HardwareRecommendations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of HardwareRecommendations.
   */
  distinct?: Prisma.HardwareRecommendationScalarFieldEnum | Prisma.HardwareRecommendationScalarFieldEnum[]
}

/**
 * HardwareRecommendation findMany
 */
export type HardwareRecommendationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter, which HardwareRecommendations to fetch.
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HardwareRecommendations to fetch.
   */
  orderBy?: Prisma.HardwareRecommendationOrderByWithRelationInput | Prisma.HardwareRecommendationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing HardwareRecommendations.
   */
  cursor?: Prisma.HardwareRecommendationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HardwareRecommendations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HardwareRecommendations.
   */
  skip?: number
  distinct?: Prisma.HardwareRecommendationScalarFieldEnum | Prisma.HardwareRecommendationScalarFieldEnum[]
}

/**
 * HardwareRecommendation create
 */
export type HardwareRecommendationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * The data needed to create a HardwareRecommendation.
   */
  data: Prisma.XOR<Prisma.HardwareRecommendationCreateInput, Prisma.HardwareRecommendationUncheckedCreateInput>
}

/**
 * HardwareRecommendation createMany
 */
export type HardwareRecommendationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many HardwareRecommendations.
   */
  data: Prisma.HardwareRecommendationCreateManyInput | Prisma.HardwareRecommendationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * HardwareRecommendation createManyAndReturn
 */
export type HardwareRecommendationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * The data used to create many HardwareRecommendations.
   */
  data: Prisma.HardwareRecommendationCreateManyInput | Prisma.HardwareRecommendationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * HardwareRecommendation update
 */
export type HardwareRecommendationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * The data needed to update a HardwareRecommendation.
   */
  data: Prisma.XOR<Prisma.HardwareRecommendationUpdateInput, Prisma.HardwareRecommendationUncheckedUpdateInput>
  /**
   * Choose, which HardwareRecommendation to update.
   */
  where: Prisma.HardwareRecommendationWhereUniqueInput
}

/**
 * HardwareRecommendation updateMany
 */
export type HardwareRecommendationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update HardwareRecommendations.
   */
  data: Prisma.XOR<Prisma.HardwareRecommendationUpdateManyMutationInput, Prisma.HardwareRecommendationUncheckedUpdateManyInput>
  /**
   * Filter which HardwareRecommendations to update
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * Limit how many HardwareRecommendations to update.
   */
  limit?: number
}

/**
 * HardwareRecommendation updateManyAndReturn
 */
export type HardwareRecommendationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * The data used to update HardwareRecommendations.
   */
  data: Prisma.XOR<Prisma.HardwareRecommendationUpdateManyMutationInput, Prisma.HardwareRecommendationUncheckedUpdateManyInput>
  /**
   * Filter which HardwareRecommendations to update
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * Limit how many HardwareRecommendations to update.
   */
  limit?: number
}

/**
 * HardwareRecommendation upsert
 */
export type HardwareRecommendationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * The filter to search for the HardwareRecommendation to update in case it exists.
   */
  where: Prisma.HardwareRecommendationWhereUniqueInput
  /**
   * In case the HardwareRecommendation found by the `where` argument doesn't exist, create a new HardwareRecommendation with this data.
   */
  create: Prisma.XOR<Prisma.HardwareRecommendationCreateInput, Prisma.HardwareRecommendationUncheckedCreateInput>
  /**
   * In case the HardwareRecommendation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.HardwareRecommendationUpdateInput, Prisma.HardwareRecommendationUncheckedUpdateInput>
}

/**
 * HardwareRecommendation delete
 */
export type HardwareRecommendationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
  /**
   * Filter which HardwareRecommendation to delete.
   */
  where: Prisma.HardwareRecommendationWhereUniqueInput
}

/**
 * HardwareRecommendation deleteMany
 */
export type HardwareRecommendationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which HardwareRecommendations to delete
   */
  where?: Prisma.HardwareRecommendationWhereInput
  /**
   * Limit how many HardwareRecommendations to delete.
   */
  limit?: number
}

/**
 * HardwareRecommendation without action
 */
export type HardwareRecommendationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HardwareRecommendation
   */
  select?: Prisma.HardwareRecommendationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HardwareRecommendation
   */
  omit?: Prisma.HardwareRecommendationOmit<ExtArgs> | null
}
