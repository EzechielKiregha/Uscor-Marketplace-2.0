
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Media` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Media
 * 
 */
export type MediaModel = runtime.Types.Result.DefaultSelection<Prisma.$MediaPayload>

export type AggregateMedia = {
  _count: MediaCountAggregateOutputType | null
  _min: MediaMinAggregateOutputType | null
  _max: MediaMaxAggregateOutputType | null
}

export type MediaMinAggregateOutputType = {
  id: string | null
  url: string | null
  type: $Enums.MediaType | null
  productId: string | null
  serviceId: string | null
  businessId: string | null
  clientId: string | null
  storeId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MediaMaxAggregateOutputType = {
  id: string | null
  url: string | null
  type: $Enums.MediaType | null
  productId: string | null
  serviceId: string | null
  businessId: string | null
  clientId: string | null
  storeId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MediaCountAggregateOutputType = {
  id: number
  url: number
  type: number
  productId: number
  serviceId: number
  businessId: number
  clientId: number
  storeId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MediaMinAggregateInputType = {
  id?: true
  url?: true
  type?: true
  productId?: true
  serviceId?: true
  businessId?: true
  clientId?: true
  storeId?: true
  createdAt?: true
  updatedAt?: true
}

export type MediaMaxAggregateInputType = {
  id?: true
  url?: true
  type?: true
  productId?: true
  serviceId?: true
  businessId?: true
  clientId?: true
  storeId?: true
  createdAt?: true
  updatedAt?: true
}

export type MediaCountAggregateInputType = {
  id?: true
  url?: true
  type?: true
  productId?: true
  serviceId?: true
  businessId?: true
  clientId?: true
  storeId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MediaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Media to aggregate.
   */
  where?: Prisma.MediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Media to fetch.
   */
  orderBy?: Prisma.MediaOrderByWithRelationInput | Prisma.MediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Media from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Media.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Media
  **/
  _count?: true | MediaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MediaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MediaMaxAggregateInputType
}

export type GetMediaAggregateType<T extends MediaAggregateArgs> = {
      [P in keyof T & keyof AggregateMedia]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMedia[P]>
    : Prisma.GetScalarType<T[P], AggregateMedia[P]>
}




export type MediaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MediaWhereInput
  orderBy?: Prisma.MediaOrderByWithAggregationInput | Prisma.MediaOrderByWithAggregationInput[]
  by: Prisma.MediaScalarFieldEnum[] | Prisma.MediaScalarFieldEnum
  having?: Prisma.MediaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MediaCountAggregateInputType | true
  _min?: MediaMinAggregateInputType
  _max?: MediaMaxAggregateInputType
}

export type MediaGroupByOutputType = {
  id: string
  url: string
  type: $Enums.MediaType
  productId: string | null
  serviceId: string | null
  businessId: string | null
  clientId: string | null
  storeId: string | null
  createdAt: Date
  updatedAt: Date
  _count: MediaCountAggregateOutputType | null
  _min: MediaMinAggregateOutputType | null
  _max: MediaMaxAggregateOutputType | null
}

type GetMediaGroupByPayload<T extends MediaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MediaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MediaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MediaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MediaGroupByOutputType[P]>
      }
    >
  > 



export type MediaWhereInput = {
  AND?: Prisma.MediaWhereInput | Prisma.MediaWhereInput[]
  OR?: Prisma.MediaWhereInput[]
  NOT?: Prisma.MediaWhereInput | Prisma.MediaWhereInput[]
  id?: Prisma.StringFilter<"Media"> | string
  url?: Prisma.StringFilter<"Media"> | string
  type?: Prisma.EnumMediaTypeFilter<"Media"> | $Enums.MediaType
  productId?: Prisma.StringNullableFilter<"Media"> | string | null
  serviceId?: Prisma.StringNullableFilter<"Media"> | string | null
  businessId?: Prisma.StringNullableFilter<"Media"> | string | null
  clientId?: Prisma.StringNullableFilter<"Media"> | string | null
  storeId?: Prisma.StringNullableFilter<"Media"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Media"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Media"> | Date | string
  product?: Prisma.XOR<Prisma.ProductNullableScalarRelationFilter, Prisma.ProductWhereInput> | null
  service?: Prisma.XOR<Prisma.FreelanceServiceNullableScalarRelationFilter, Prisma.FreelanceServiceWhereInput> | null
  business?: Prisma.XOR<Prisma.BusinessNullableScalarRelationFilter, Prisma.BusinessWhereInput> | null
  client?: Prisma.XOR<Prisma.ClientNullableScalarRelationFilter, Prisma.ClientWhereInput> | null
  store?: Prisma.XOR<Prisma.StoreNullableScalarRelationFilter, Prisma.StoreWhereInput> | null
  postOfSales?: Prisma.PostOfSaleListRelationFilter
}

export type MediaOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  type?: Prisma.SortOrder
  productId?: Prisma.SortOrderInput | Prisma.SortOrder
  serviceId?: Prisma.SortOrderInput | Prisma.SortOrder
  businessId?: Prisma.SortOrderInput | Prisma.SortOrder
  clientId?: Prisma.SortOrderInput | Prisma.SortOrder
  storeId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  product?: Prisma.ProductOrderByWithRelationInput
  service?: Prisma.FreelanceServiceOrderByWithRelationInput
  business?: Prisma.BusinessOrderByWithRelationInput
  client?: Prisma.ClientOrderByWithRelationInput
  store?: Prisma.StoreOrderByWithRelationInput
  postOfSales?: Prisma.PostOfSaleOrderByRelationAggregateInput
}

export type MediaWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MediaWhereInput | Prisma.MediaWhereInput[]
  OR?: Prisma.MediaWhereInput[]
  NOT?: Prisma.MediaWhereInput | Prisma.MediaWhereInput[]
  url?: Prisma.StringFilter<"Media"> | string
  type?: Prisma.EnumMediaTypeFilter<"Media"> | $Enums.MediaType
  productId?: Prisma.StringNullableFilter<"Media"> | string | null
  serviceId?: Prisma.StringNullableFilter<"Media"> | string | null
  businessId?: Prisma.StringNullableFilter<"Media"> | string | null
  clientId?: Prisma.StringNullableFilter<"Media"> | string | null
  storeId?: Prisma.StringNullableFilter<"Media"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Media"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Media"> | Date | string
  product?: Prisma.XOR<Prisma.ProductNullableScalarRelationFilter, Prisma.ProductWhereInput> | null
  service?: Prisma.XOR<Prisma.FreelanceServiceNullableScalarRelationFilter, Prisma.FreelanceServiceWhereInput> | null
  business?: Prisma.XOR<Prisma.BusinessNullableScalarRelationFilter, Prisma.BusinessWhereInput> | null
  client?: Prisma.XOR<Prisma.ClientNullableScalarRelationFilter, Prisma.ClientWhereInput> | null
  store?: Prisma.XOR<Prisma.StoreNullableScalarRelationFilter, Prisma.StoreWhereInput> | null
  postOfSales?: Prisma.PostOfSaleListRelationFilter
}, "id">

export type MediaOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  type?: Prisma.SortOrder
  productId?: Prisma.SortOrderInput | Prisma.SortOrder
  serviceId?: Prisma.SortOrderInput | Prisma.SortOrder
  businessId?: Prisma.SortOrderInput | Prisma.SortOrder
  clientId?: Prisma.SortOrderInput | Prisma.SortOrder
  storeId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MediaCountOrderByAggregateInput
  _max?: Prisma.MediaMaxOrderByAggregateInput
  _min?: Prisma.MediaMinOrderByAggregateInput
}

export type MediaScalarWhereWithAggregatesInput = {
  AND?: Prisma.MediaScalarWhereWithAggregatesInput | Prisma.MediaScalarWhereWithAggregatesInput[]
  OR?: Prisma.MediaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MediaScalarWhereWithAggregatesInput | Prisma.MediaScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Media"> | string
  url?: Prisma.StringWithAggregatesFilter<"Media"> | string
  type?: Prisma.EnumMediaTypeWithAggregatesFilter<"Media"> | $Enums.MediaType
  productId?: Prisma.StringNullableWithAggregatesFilter<"Media"> | string | null
  serviceId?: Prisma.StringNullableWithAggregatesFilter<"Media"> | string | null
  businessId?: Prisma.StringNullableWithAggregatesFilter<"Media"> | string | null
  clientId?: Prisma.StringNullableWithAggregatesFilter<"Media"> | string | null
  storeId?: Prisma.StringNullableWithAggregatesFilter<"Media"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Media"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Media"> | Date | string
}

export type MediaCreateInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaCreateManyInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaListRelationFilter = {
  every?: Prisma.MediaWhereInput
  some?: Prisma.MediaWhereInput
  none?: Prisma.MediaWhereInput
}

export type MediaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MediaCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  type?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  serviceId?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  storeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MediaMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  type?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  serviceId?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  storeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MediaMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  type?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  serviceId?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  storeId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MediaCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput> | Prisma.MediaCreateWithoutBusinessInput[] | Prisma.MediaUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutBusinessInput | Prisma.MediaCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.MediaCreateManyBusinessInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput> | Prisma.MediaCreateWithoutBusinessInput[] | Prisma.MediaUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutBusinessInput | Prisma.MediaCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.MediaCreateManyBusinessInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput> | Prisma.MediaCreateWithoutBusinessInput[] | Prisma.MediaUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutBusinessInput | Prisma.MediaCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutBusinessInput | Prisma.MediaUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.MediaCreateManyBusinessInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutBusinessInput | Prisma.MediaUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutBusinessInput | Prisma.MediaUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput> | Prisma.MediaCreateWithoutBusinessInput[] | Prisma.MediaUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutBusinessInput | Prisma.MediaCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutBusinessInput | Prisma.MediaUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.MediaCreateManyBusinessInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutBusinessInput | Prisma.MediaUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutBusinessInput | Prisma.MediaUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaCreateNestedManyWithoutClientInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput> | Prisma.MediaCreateWithoutClientInput[] | Prisma.MediaUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutClientInput | Prisma.MediaCreateOrConnectWithoutClientInput[]
  createMany?: Prisma.MediaCreateManyClientInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutClientInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput> | Prisma.MediaCreateWithoutClientInput[] | Prisma.MediaUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutClientInput | Prisma.MediaCreateOrConnectWithoutClientInput[]
  createMany?: Prisma.MediaCreateManyClientInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutClientNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput> | Prisma.MediaCreateWithoutClientInput[] | Prisma.MediaUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutClientInput | Prisma.MediaCreateOrConnectWithoutClientInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutClientInput | Prisma.MediaUpsertWithWhereUniqueWithoutClientInput[]
  createMany?: Prisma.MediaCreateManyClientInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutClientInput | Prisma.MediaUpdateWithWhereUniqueWithoutClientInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutClientInput | Prisma.MediaUpdateManyWithWhereWithoutClientInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutClientNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput> | Prisma.MediaCreateWithoutClientInput[] | Prisma.MediaUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutClientInput | Prisma.MediaCreateOrConnectWithoutClientInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutClientInput | Prisma.MediaUpsertWithWhereUniqueWithoutClientInput[]
  createMany?: Prisma.MediaCreateManyClientInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutClientInput | Prisma.MediaUpdateWithWhereUniqueWithoutClientInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutClientInput | Prisma.MediaUpdateManyWithWhereWithoutClientInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput> | Prisma.MediaCreateWithoutProductInput[] | Prisma.MediaUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutProductInput | Prisma.MediaCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.MediaCreateManyProductInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput> | Prisma.MediaCreateWithoutProductInput[] | Prisma.MediaUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutProductInput | Prisma.MediaCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.MediaCreateManyProductInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput> | Prisma.MediaCreateWithoutProductInput[] | Prisma.MediaUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutProductInput | Prisma.MediaCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutProductInput | Prisma.MediaUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.MediaCreateManyProductInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutProductInput | Prisma.MediaUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutProductInput | Prisma.MediaUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput> | Prisma.MediaCreateWithoutProductInput[] | Prisma.MediaUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutProductInput | Prisma.MediaCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutProductInput | Prisma.MediaUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.MediaCreateManyProductInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutProductInput | Prisma.MediaUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutProductInput | Prisma.MediaUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type EnumMediaTypeFieldUpdateOperationsInput = {
  set?: $Enums.MediaType
}

export type MediaCreateNestedManyWithoutServiceInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput> | Prisma.MediaCreateWithoutServiceInput[] | Prisma.MediaUncheckedCreateWithoutServiceInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutServiceInput | Prisma.MediaCreateOrConnectWithoutServiceInput[]
  createMany?: Prisma.MediaCreateManyServiceInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutServiceInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput> | Prisma.MediaCreateWithoutServiceInput[] | Prisma.MediaUncheckedCreateWithoutServiceInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutServiceInput | Prisma.MediaCreateOrConnectWithoutServiceInput[]
  createMany?: Prisma.MediaCreateManyServiceInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutServiceNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput> | Prisma.MediaCreateWithoutServiceInput[] | Prisma.MediaUncheckedCreateWithoutServiceInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutServiceInput | Prisma.MediaCreateOrConnectWithoutServiceInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutServiceInput | Prisma.MediaUpsertWithWhereUniqueWithoutServiceInput[]
  createMany?: Prisma.MediaCreateManyServiceInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutServiceInput | Prisma.MediaUpdateWithWhereUniqueWithoutServiceInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutServiceInput | Prisma.MediaUpdateManyWithWhereWithoutServiceInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutServiceNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput> | Prisma.MediaCreateWithoutServiceInput[] | Prisma.MediaUncheckedCreateWithoutServiceInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutServiceInput | Prisma.MediaCreateOrConnectWithoutServiceInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutServiceInput | Prisma.MediaUpsertWithWhereUniqueWithoutServiceInput[]
  createMany?: Prisma.MediaCreateManyServiceInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutServiceInput | Prisma.MediaUpdateWithWhereUniqueWithoutServiceInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutServiceInput | Prisma.MediaUpdateManyWithWhereWithoutServiceInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaCreateNestedManyWithoutPostOfSalesInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput> | Prisma.MediaCreateWithoutPostOfSalesInput[] | Prisma.MediaUncheckedCreateWithoutPostOfSalesInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutPostOfSalesInput | Prisma.MediaCreateOrConnectWithoutPostOfSalesInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutPostOfSalesInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput> | Prisma.MediaCreateWithoutPostOfSalesInput[] | Prisma.MediaUncheckedCreateWithoutPostOfSalesInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutPostOfSalesInput | Prisma.MediaCreateOrConnectWithoutPostOfSalesInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutPostOfSalesNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput> | Prisma.MediaCreateWithoutPostOfSalesInput[] | Prisma.MediaUncheckedCreateWithoutPostOfSalesInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutPostOfSalesInput | Prisma.MediaCreateOrConnectWithoutPostOfSalesInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutPostOfSalesInput | Prisma.MediaUpsertWithWhereUniqueWithoutPostOfSalesInput[]
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutPostOfSalesInput | Prisma.MediaUpdateWithWhereUniqueWithoutPostOfSalesInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutPostOfSalesInput | Prisma.MediaUpdateManyWithWhereWithoutPostOfSalesInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutPostOfSalesNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput> | Prisma.MediaCreateWithoutPostOfSalesInput[] | Prisma.MediaUncheckedCreateWithoutPostOfSalesInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutPostOfSalesInput | Prisma.MediaCreateOrConnectWithoutPostOfSalesInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutPostOfSalesInput | Prisma.MediaUpsertWithWhereUniqueWithoutPostOfSalesInput[]
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutPostOfSalesInput | Prisma.MediaUpdateWithWhereUniqueWithoutPostOfSalesInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutPostOfSalesInput | Prisma.MediaUpdateManyWithWhereWithoutPostOfSalesInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaCreateNestedManyWithoutStoreInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput> | Prisma.MediaCreateWithoutStoreInput[] | Prisma.MediaUncheckedCreateWithoutStoreInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutStoreInput | Prisma.MediaCreateOrConnectWithoutStoreInput[]
  createMany?: Prisma.MediaCreateManyStoreInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUncheckedCreateNestedManyWithoutStoreInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput> | Prisma.MediaCreateWithoutStoreInput[] | Prisma.MediaUncheckedCreateWithoutStoreInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutStoreInput | Prisma.MediaCreateOrConnectWithoutStoreInput[]
  createMany?: Prisma.MediaCreateManyStoreInputEnvelope
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
}

export type MediaUpdateManyWithoutStoreNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput> | Prisma.MediaCreateWithoutStoreInput[] | Prisma.MediaUncheckedCreateWithoutStoreInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutStoreInput | Prisma.MediaCreateOrConnectWithoutStoreInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutStoreInput | Prisma.MediaUpsertWithWhereUniqueWithoutStoreInput[]
  createMany?: Prisma.MediaCreateManyStoreInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutStoreInput | Prisma.MediaUpdateWithWhereUniqueWithoutStoreInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutStoreInput | Prisma.MediaUpdateManyWithWhereWithoutStoreInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaUncheckedUpdateManyWithoutStoreNestedInput = {
  create?: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput> | Prisma.MediaCreateWithoutStoreInput[] | Prisma.MediaUncheckedCreateWithoutStoreInput[]
  connectOrCreate?: Prisma.MediaCreateOrConnectWithoutStoreInput | Prisma.MediaCreateOrConnectWithoutStoreInput[]
  upsert?: Prisma.MediaUpsertWithWhereUniqueWithoutStoreInput | Prisma.MediaUpsertWithWhereUniqueWithoutStoreInput[]
  createMany?: Prisma.MediaCreateManyStoreInputEnvelope
  set?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  disconnect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  delete?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  connect?: Prisma.MediaWhereUniqueInput | Prisma.MediaWhereUniqueInput[]
  update?: Prisma.MediaUpdateWithWhereUniqueWithoutStoreInput | Prisma.MediaUpdateWithWhereUniqueWithoutStoreInput[]
  updateMany?: Prisma.MediaUpdateManyWithWhereWithoutStoreInput | Prisma.MediaUpdateManyWithWhereWithoutStoreInput[]
  deleteMany?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
}

export type MediaCreateWithoutBusinessInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateWithoutBusinessInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaCreateOrConnectWithoutBusinessInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput>
}

export type MediaCreateManyBusinessInputEnvelope = {
  data: Prisma.MediaCreateManyBusinessInput | Prisma.MediaCreateManyBusinessInput[]
  skipDuplicates?: boolean
}

export type MediaUpsertWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutBusinessInput, Prisma.MediaUncheckedUpdateWithoutBusinessInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutBusinessInput, Prisma.MediaUncheckedCreateWithoutBusinessInput>
}

export type MediaUpdateWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutBusinessInput, Prisma.MediaUncheckedUpdateWithoutBusinessInput>
}

export type MediaUpdateManyWithWhereWithoutBusinessInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutBusinessInput>
}

export type MediaScalarWhereInput = {
  AND?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
  OR?: Prisma.MediaScalarWhereInput[]
  NOT?: Prisma.MediaScalarWhereInput | Prisma.MediaScalarWhereInput[]
  id?: Prisma.StringFilter<"Media"> | string
  url?: Prisma.StringFilter<"Media"> | string
  type?: Prisma.EnumMediaTypeFilter<"Media"> | $Enums.MediaType
  productId?: Prisma.StringNullableFilter<"Media"> | string | null
  serviceId?: Prisma.StringNullableFilter<"Media"> | string | null
  businessId?: Prisma.StringNullableFilter<"Media"> | string | null
  clientId?: Prisma.StringNullableFilter<"Media"> | string | null
  storeId?: Prisma.StringNullableFilter<"Media"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Media"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Media"> | Date | string
}

export type MediaCreateWithoutClientInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateWithoutClientInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaCreateOrConnectWithoutClientInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput>
}

export type MediaCreateManyClientInputEnvelope = {
  data: Prisma.MediaCreateManyClientInput | Prisma.MediaCreateManyClientInput[]
  skipDuplicates?: boolean
}

export type MediaUpsertWithWhereUniqueWithoutClientInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutClientInput, Prisma.MediaUncheckedUpdateWithoutClientInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutClientInput, Prisma.MediaUncheckedCreateWithoutClientInput>
}

export type MediaUpdateWithWhereUniqueWithoutClientInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutClientInput, Prisma.MediaUncheckedUpdateWithoutClientInput>
}

export type MediaUpdateManyWithWhereWithoutClientInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutClientInput>
}

export type MediaCreateWithoutProductInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateWithoutProductInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaCreateOrConnectWithoutProductInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput>
}

export type MediaCreateManyProductInputEnvelope = {
  data: Prisma.MediaCreateManyProductInput | Prisma.MediaCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type MediaUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutProductInput, Prisma.MediaUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutProductInput, Prisma.MediaUncheckedCreateWithoutProductInput>
}

export type MediaUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutProductInput, Prisma.MediaUncheckedUpdateWithoutProductInput>
}

export type MediaUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutProductInput>
}

export type MediaCreateWithoutServiceInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateWithoutServiceInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaCreateOrConnectWithoutServiceInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput>
}

export type MediaCreateManyServiceInputEnvelope = {
  data: Prisma.MediaCreateManyServiceInput | Prisma.MediaCreateManyServiceInput[]
  skipDuplicates?: boolean
}

export type MediaUpsertWithWhereUniqueWithoutServiceInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutServiceInput, Prisma.MediaUncheckedUpdateWithoutServiceInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutServiceInput, Prisma.MediaUncheckedCreateWithoutServiceInput>
}

export type MediaUpdateWithWhereUniqueWithoutServiceInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutServiceInput, Prisma.MediaUncheckedUpdateWithoutServiceInput>
}

export type MediaUpdateManyWithWhereWithoutServiceInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutServiceInput>
}

export type MediaCreateWithoutPostOfSalesInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  store?: Prisma.StoreCreateNestedOneWithoutMediasInput
}

export type MediaUncheckedCreateWithoutPostOfSalesInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaCreateOrConnectWithoutPostOfSalesInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput>
}

export type MediaUpsertWithWhereUniqueWithoutPostOfSalesInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutPostOfSalesInput, Prisma.MediaUncheckedUpdateWithoutPostOfSalesInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutPostOfSalesInput, Prisma.MediaUncheckedCreateWithoutPostOfSalesInput>
}

export type MediaUpdateWithWhereUniqueWithoutPostOfSalesInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutPostOfSalesInput, Prisma.MediaUncheckedUpdateWithoutPostOfSalesInput>
}

export type MediaUpdateManyWithWhereWithoutPostOfSalesInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutPostOfSalesInput>
}

export type MediaCreateWithoutStoreInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  createdAt?: Date | string
  updatedAt?: Date | string
  product?: Prisma.ProductCreateNestedOneWithoutMediasInput
  service?: Prisma.FreelanceServiceCreateNestedOneWithoutMediasInput
  business?: Prisma.BusinessCreateNestedOneWithoutMediasInput
  client?: Prisma.ClientCreateNestedOneWithoutMediasInput
  postOfSales?: Prisma.PostOfSaleCreateNestedManyWithoutMediaInput
}

export type MediaUncheckedCreateWithoutStoreInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedCreateNestedManyWithoutMediaInput
}

export type MediaCreateOrConnectWithoutStoreInput = {
  where: Prisma.MediaWhereUniqueInput
  create: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput>
}

export type MediaCreateManyStoreInputEnvelope = {
  data: Prisma.MediaCreateManyStoreInput | Prisma.MediaCreateManyStoreInput[]
  skipDuplicates?: boolean
}

export type MediaUpsertWithWhereUniqueWithoutStoreInput = {
  where: Prisma.MediaWhereUniqueInput
  update: Prisma.XOR<Prisma.MediaUpdateWithoutStoreInput, Prisma.MediaUncheckedUpdateWithoutStoreInput>
  create: Prisma.XOR<Prisma.MediaCreateWithoutStoreInput, Prisma.MediaUncheckedCreateWithoutStoreInput>
}

export type MediaUpdateWithWhereUniqueWithoutStoreInput = {
  where: Prisma.MediaWhereUniqueInput
  data: Prisma.XOR<Prisma.MediaUpdateWithoutStoreInput, Prisma.MediaUncheckedUpdateWithoutStoreInput>
}

export type MediaUpdateManyWithWhereWithoutStoreInput = {
  where: Prisma.MediaScalarWhereInput
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyWithoutStoreInput>
}

export type MediaCreateManyBusinessInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateManyWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaCreateManyClientInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateManyWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaCreateManyProductInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaCreateManyServiceInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  businessId?: string | null
  clientId?: string | null
  storeId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateWithoutServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateWithoutServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateManyWithoutServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaUpdateWithoutPostOfSalesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  store?: Prisma.StoreUpdateOneWithoutMediasNestedInput
}

export type MediaUncheckedUpdateWithoutPostOfSalesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaUncheckedUpdateManyWithoutPostOfSalesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  storeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MediaCreateManyStoreInput = {
  id?: string
  url: string
  type: $Enums.MediaType
  productId?: string | null
  serviceId?: string | null
  businessId?: string | null
  clientId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MediaUpdateWithoutStoreInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneWithoutMediasNestedInput
  service?: Prisma.FreelanceServiceUpdateOneWithoutMediasNestedInput
  business?: Prisma.BusinessUpdateOneWithoutMediasNestedInput
  client?: Prisma.ClientUpdateOneWithoutMediasNestedInput
  postOfSales?: Prisma.PostOfSaleUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateWithoutStoreInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postOfSales?: Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput
}

export type MediaUncheckedUpdateManyWithoutStoreInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
  productId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  serviceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  businessId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clientId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type MediaCountOutputType
 */

export type MediaCountOutputType = {
  postOfSales: number
}

export type MediaCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  postOfSales?: boolean | MediaCountOutputTypeCountPostOfSalesArgs
}

/**
 * MediaCountOutputType without action
 */
export type MediaCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MediaCountOutputType
   */
  select?: Prisma.MediaCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MediaCountOutputType without action
 */
export type MediaCountOutputTypeCountPostOfSalesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostOfSaleWhereInput
}


export type MediaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  url?: boolean
  type?: boolean
  productId?: boolean
  serviceId?: boolean
  businessId?: boolean
  clientId?: boolean
  storeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
  postOfSales?: boolean | Prisma.Media$postOfSalesArgs<ExtArgs>
  _count?: boolean | Prisma.MediaCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["media"]>

export type MediaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  url?: boolean
  type?: boolean
  productId?: boolean
  serviceId?: boolean
  businessId?: boolean
  clientId?: boolean
  storeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
}, ExtArgs["result"]["media"]>

export type MediaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  url?: boolean
  type?: boolean
  productId?: boolean
  serviceId?: boolean
  businessId?: boolean
  clientId?: boolean
  storeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
}, ExtArgs["result"]["media"]>

export type MediaSelectScalar = {
  id?: boolean
  url?: boolean
  type?: boolean
  productId?: boolean
  serviceId?: boolean
  businessId?: boolean
  clientId?: boolean
  storeId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MediaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "url" | "type" | "productId" | "serviceId" | "businessId" | "clientId" | "storeId" | "createdAt" | "updatedAt", ExtArgs["result"]["media"]>
export type MediaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
  postOfSales?: boolean | Prisma.Media$postOfSalesArgs<ExtArgs>
  _count?: boolean | Prisma.MediaCountOutputTypeDefaultArgs<ExtArgs>
}
export type MediaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
}
export type MediaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.Media$productArgs<ExtArgs>
  service?: boolean | Prisma.Media$serviceArgs<ExtArgs>
  business?: boolean | Prisma.Media$businessArgs<ExtArgs>
  client?: boolean | Prisma.Media$clientArgs<ExtArgs>
  store?: boolean | Prisma.Media$storeArgs<ExtArgs>
}

export type $MediaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Media"
  objects: {
    product: Prisma.$ProductPayload<ExtArgs> | null
    service: Prisma.$FreelanceServicePayload<ExtArgs> | null
    business: Prisma.$BusinessPayload<ExtArgs> | null
    client: Prisma.$ClientPayload<ExtArgs> | null
    store: Prisma.$StorePayload<ExtArgs> | null
    postOfSales: Prisma.$PostOfSalePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    url: string
    type: $Enums.MediaType
    productId: string | null
    serviceId: string | null
    businessId: string | null
    clientId: string | null
    storeId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["media"]>
  composites: {}
}

export type MediaGetPayload<S extends boolean | null | undefined | MediaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MediaPayload, S>

export type MediaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MediaCountAggregateInputType | true
  }

export interface MediaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Media'], meta: { name: 'Media' } }
  /**
   * Find zero or one Media that matches the filter.
   * @param {MediaFindUniqueArgs} args - Arguments to find a Media
   * @example
   * // Get one Media
   * const media = await prisma.media.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MediaFindUniqueArgs>(args: Prisma.SelectSubset<T, MediaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Media that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MediaFindUniqueOrThrowArgs} args - Arguments to find a Media
   * @example
   * // Get one Media
   * const media = await prisma.media.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MediaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Media that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaFindFirstArgs} args - Arguments to find a Media
   * @example
   * // Get one Media
   * const media = await prisma.media.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MediaFindFirstArgs>(args?: Prisma.SelectSubset<T, MediaFindFirstArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Media that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaFindFirstOrThrowArgs} args - Arguments to find a Media
   * @example
   * // Get one Media
   * const media = await prisma.media.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MediaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MediaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Media that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Media
   * const media = await prisma.media.findMany()
   * 
   * // Get first 10 Media
   * const media = await prisma.media.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mediaWithIdOnly = await prisma.media.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MediaFindManyArgs>(args?: Prisma.SelectSubset<T, MediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Media.
   * @param {MediaCreateArgs} args - Arguments to create a Media.
   * @example
   * // Create one Media
   * const Media = await prisma.media.create({
   *   data: {
   *     // ... data to create a Media
   *   }
   * })
   * 
   */
  create<T extends MediaCreateArgs>(args: Prisma.SelectSubset<T, MediaCreateArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Media.
   * @param {MediaCreateManyArgs} args - Arguments to create many Media.
   * @example
   * // Create many Media
   * const media = await prisma.media.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MediaCreateManyArgs>(args?: Prisma.SelectSubset<T, MediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Media and returns the data saved in the database.
   * @param {MediaCreateManyAndReturnArgs} args - Arguments to create many Media.
   * @example
   * // Create many Media
   * const media = await prisma.media.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Media and only return the `id`
   * const mediaWithIdOnly = await prisma.media.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MediaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Media.
   * @param {MediaDeleteArgs} args - Arguments to delete one Media.
   * @example
   * // Delete one Media
   * const Media = await prisma.media.delete({
   *   where: {
   *     // ... filter to delete one Media
   *   }
   * })
   * 
   */
  delete<T extends MediaDeleteArgs>(args: Prisma.SelectSubset<T, MediaDeleteArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Media.
   * @param {MediaUpdateArgs} args - Arguments to update one Media.
   * @example
   * // Update one Media
   * const media = await prisma.media.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MediaUpdateArgs>(args: Prisma.SelectSubset<T, MediaUpdateArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Media.
   * @param {MediaDeleteManyArgs} args - Arguments to filter Media to delete.
   * @example
   * // Delete a few Media
   * const { count } = await prisma.media.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MediaDeleteManyArgs>(args?: Prisma.SelectSubset<T, MediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Media.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Media
   * const media = await prisma.media.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MediaUpdateManyArgs>(args: Prisma.SelectSubset<T, MediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Media and returns the data updated in the database.
   * @param {MediaUpdateManyAndReturnArgs} args - Arguments to update many Media.
   * @example
   * // Update many Media
   * const media = await prisma.media.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Media and only return the `id`
   * const mediaWithIdOnly = await prisma.media.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MediaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Media.
   * @param {MediaUpsertArgs} args - Arguments to update or create a Media.
   * @example
   * // Update or create a Media
   * const media = await prisma.media.upsert({
   *   create: {
   *     // ... data to create a Media
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Media we want to update
   *   }
   * })
   */
  upsert<T extends MediaUpsertArgs>(args: Prisma.SelectSubset<T, MediaUpsertArgs<ExtArgs>>): Prisma.Prisma__MediaClient<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Media.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaCountArgs} args - Arguments to filter Media to count.
   * @example
   * // Count the number of Media
   * const count = await prisma.media.count({
   *   where: {
   *     // ... the filter for the Media we want to count
   *   }
   * })
  **/
  count<T extends MediaCountArgs>(
    args?: Prisma.Subset<T, MediaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MediaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Media.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MediaAggregateArgs>(args: Prisma.Subset<T, MediaAggregateArgs>): Prisma.PrismaPromise<GetMediaAggregateType<T>>

  /**
   * Group by Media.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MediaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MediaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MediaGroupByArgs['orderBy'] }
      : { orderBy?: MediaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Media model
 */
readonly fields: MediaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Media.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MediaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  product<T extends Prisma.Media$productArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$productArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  service<T extends Prisma.Media$serviceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$serviceArgs<ExtArgs>>): Prisma.Prisma__FreelanceServiceClient<runtime.Types.Result.GetResult<Prisma.$FreelanceServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  business<T extends Prisma.Media$businessArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$businessArgs<ExtArgs>>): Prisma.Prisma__BusinessClient<runtime.Types.Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  client<T extends Prisma.Media$clientArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$clientArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  store<T extends Prisma.Media$storeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$storeArgs<ExtArgs>>): Prisma.Prisma__StoreClient<runtime.Types.Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  postOfSales<T extends Prisma.Media$postOfSalesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Media$postOfSalesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Media model
 */
export interface MediaFieldRefs {
  readonly id: Prisma.FieldRef<"Media", 'String'>
  readonly url: Prisma.FieldRef<"Media", 'String'>
  readonly type: Prisma.FieldRef<"Media", 'MediaType'>
  readonly productId: Prisma.FieldRef<"Media", 'String'>
  readonly serviceId: Prisma.FieldRef<"Media", 'String'>
  readonly businessId: Prisma.FieldRef<"Media", 'String'>
  readonly clientId: Prisma.FieldRef<"Media", 'String'>
  readonly storeId: Prisma.FieldRef<"Media", 'String'>
  readonly createdAt: Prisma.FieldRef<"Media", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Media", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Media findUnique
 */
export type MediaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter, which Media to fetch.
   */
  where: Prisma.MediaWhereUniqueInput
}

/**
 * Media findUniqueOrThrow
 */
export type MediaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter, which Media to fetch.
   */
  where: Prisma.MediaWhereUniqueInput
}

/**
 * Media findFirst
 */
export type MediaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter, which Media to fetch.
   */
  where?: Prisma.MediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Media to fetch.
   */
  orderBy?: Prisma.MediaOrderByWithRelationInput | Prisma.MediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Media.
   */
  cursor?: Prisma.MediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Media from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Media.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Media.
   */
  distinct?: Prisma.MediaScalarFieldEnum | Prisma.MediaScalarFieldEnum[]
}

/**
 * Media findFirstOrThrow
 */
export type MediaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter, which Media to fetch.
   */
  where?: Prisma.MediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Media to fetch.
   */
  orderBy?: Prisma.MediaOrderByWithRelationInput | Prisma.MediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Media.
   */
  cursor?: Prisma.MediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Media from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Media.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Media.
   */
  distinct?: Prisma.MediaScalarFieldEnum | Prisma.MediaScalarFieldEnum[]
}

/**
 * Media findMany
 */
export type MediaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter, which Media to fetch.
   */
  where?: Prisma.MediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Media to fetch.
   */
  orderBy?: Prisma.MediaOrderByWithRelationInput | Prisma.MediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Media.
   */
  cursor?: Prisma.MediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Media from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Media.
   */
  skip?: number
  distinct?: Prisma.MediaScalarFieldEnum | Prisma.MediaScalarFieldEnum[]
}

/**
 * Media create
 */
export type MediaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * The data needed to create a Media.
   */
  data: Prisma.XOR<Prisma.MediaCreateInput, Prisma.MediaUncheckedCreateInput>
}

/**
 * Media createMany
 */
export type MediaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Media.
   */
  data: Prisma.MediaCreateManyInput | Prisma.MediaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Media createManyAndReturn
 */
export type MediaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * The data used to create many Media.
   */
  data: Prisma.MediaCreateManyInput | Prisma.MediaCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Media update
 */
export type MediaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * The data needed to update a Media.
   */
  data: Prisma.XOR<Prisma.MediaUpdateInput, Prisma.MediaUncheckedUpdateInput>
  /**
   * Choose, which Media to update.
   */
  where: Prisma.MediaWhereUniqueInput
}

/**
 * Media updateMany
 */
export type MediaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Media.
   */
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyInput>
  /**
   * Filter which Media to update
   */
  where?: Prisma.MediaWhereInput
  /**
   * Limit how many Media to update.
   */
  limit?: number
}

/**
 * Media updateManyAndReturn
 */
export type MediaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * The data used to update Media.
   */
  data: Prisma.XOR<Prisma.MediaUpdateManyMutationInput, Prisma.MediaUncheckedUpdateManyInput>
  /**
   * Filter which Media to update
   */
  where?: Prisma.MediaWhereInput
  /**
   * Limit how many Media to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Media upsert
 */
export type MediaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * The filter to search for the Media to update in case it exists.
   */
  where: Prisma.MediaWhereUniqueInput
  /**
   * In case the Media found by the `where` argument doesn't exist, create a new Media with this data.
   */
  create: Prisma.XOR<Prisma.MediaCreateInput, Prisma.MediaUncheckedCreateInput>
  /**
   * In case the Media was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MediaUpdateInput, Prisma.MediaUncheckedUpdateInput>
}

/**
 * Media delete
 */
export type MediaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  /**
   * Filter which Media to delete.
   */
  where: Prisma.MediaWhereUniqueInput
}

/**
 * Media deleteMany
 */
export type MediaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Media to delete
   */
  where?: Prisma.MediaWhereInput
  /**
   * Limit how many Media to delete.
   */
  limit?: number
}

/**
 * Media.product
 */
export type Media$productArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product
   */
  select?: Prisma.ProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Product
   */
  omit?: Prisma.ProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductInclude<ExtArgs> | null
  where?: Prisma.ProductWhereInput
}

/**
 * Media.service
 */
export type Media$serviceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FreelanceService
   */
  select?: Prisma.FreelanceServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FreelanceService
   */
  omit?: Prisma.FreelanceServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FreelanceServiceInclude<ExtArgs> | null
  where?: Prisma.FreelanceServiceWhereInput
}

/**
 * Media.business
 */
export type Media$businessArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Business
   */
  select?: Prisma.BusinessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Business
   */
  omit?: Prisma.BusinessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BusinessInclude<ExtArgs> | null
  where?: Prisma.BusinessWhereInput
}

/**
 * Media.client
 */
export type Media$clientArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  where?: Prisma.ClientWhereInput
}

/**
 * Media.store
 */
export type Media$storeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Store
   */
  select?: Prisma.StoreSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Store
   */
  omit?: Prisma.StoreOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StoreInclude<ExtArgs> | null
  where?: Prisma.StoreWhereInput
}

/**
 * Media.postOfSales
 */
export type Media$postOfSalesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  where?: Prisma.PostOfSaleWhereInput
  orderBy?: Prisma.PostOfSaleOrderByWithRelationInput | Prisma.PostOfSaleOrderByWithRelationInput[]
  cursor?: Prisma.PostOfSaleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostOfSaleScalarFieldEnum | Prisma.PostOfSaleScalarFieldEnum[]
}

/**
 * Media without action
 */
export type MediaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
}
