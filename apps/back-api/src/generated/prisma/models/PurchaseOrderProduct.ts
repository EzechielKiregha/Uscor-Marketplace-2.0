
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PurchaseOrderProduct` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PurchaseOrderProduct
 * 
 */
export type PurchaseOrderProductModel = runtime.Types.Result.DefaultSelection<Prisma.$PurchaseOrderProductPayload>

export type AggregatePurchaseOrderProduct = {
  _count: PurchaseOrderProductCountAggregateOutputType | null
  _avg: PurchaseOrderProductAvgAggregateOutputType | null
  _sum: PurchaseOrderProductSumAggregateOutputType | null
  _min: PurchaseOrderProductMinAggregateOutputType | null
  _max: PurchaseOrderProductMaxAggregateOutputType | null
}

export type PurchaseOrderProductAvgAggregateOutputType = {
  quantity: number | null
}

export type PurchaseOrderProductSumAggregateOutputType = {
  quantity: number | null
}

export type PurchaseOrderProductMinAggregateOutputType = {
  id: string | null
  purchaseOrderId: string | null
  productId: string | null
  quantity: number | null
  createdAt: Date | null
}

export type PurchaseOrderProductMaxAggregateOutputType = {
  id: string | null
  purchaseOrderId: string | null
  productId: string | null
  quantity: number | null
  createdAt: Date | null
}

export type PurchaseOrderProductCountAggregateOutputType = {
  id: number
  purchaseOrderId: number
  productId: number
  quantity: number
  createdAt: number
  _all: number
}


export type PurchaseOrderProductAvgAggregateInputType = {
  quantity?: true
}

export type PurchaseOrderProductSumAggregateInputType = {
  quantity?: true
}

export type PurchaseOrderProductMinAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  productId?: true
  quantity?: true
  createdAt?: true
}

export type PurchaseOrderProductMaxAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  productId?: true
  quantity?: true
  createdAt?: true
}

export type PurchaseOrderProductCountAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  productId?: true
  quantity?: true
  createdAt?: true
  _all?: true
}

export type PurchaseOrderProductAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PurchaseOrderProduct to aggregate.
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderProducts to fetch.
   */
  orderBy?: Prisma.PurchaseOrderProductOrderByWithRelationInput | Prisma.PurchaseOrderProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PurchaseOrderProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PurchaseOrderProducts
  **/
  _count?: true | PurchaseOrderProductCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PurchaseOrderProductAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PurchaseOrderProductSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PurchaseOrderProductMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PurchaseOrderProductMaxAggregateInputType
}

export type GetPurchaseOrderProductAggregateType<T extends PurchaseOrderProductAggregateArgs> = {
      [P in keyof T & keyof AggregatePurchaseOrderProduct]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePurchaseOrderProduct[P]>
    : Prisma.GetScalarType<T[P], AggregatePurchaseOrderProduct[P]>
}




export type PurchaseOrderProductGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PurchaseOrderProductWhereInput
  orderBy?: Prisma.PurchaseOrderProductOrderByWithAggregationInput | Prisma.PurchaseOrderProductOrderByWithAggregationInput[]
  by: Prisma.PurchaseOrderProductScalarFieldEnum[] | Prisma.PurchaseOrderProductScalarFieldEnum
  having?: Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PurchaseOrderProductCountAggregateInputType | true
  _avg?: PurchaseOrderProductAvgAggregateInputType
  _sum?: PurchaseOrderProductSumAggregateInputType
  _min?: PurchaseOrderProductMinAggregateInputType
  _max?: PurchaseOrderProductMaxAggregateInputType
}

export type PurchaseOrderProductGroupByOutputType = {
  id: string
  purchaseOrderId: string
  productId: string
  quantity: number
  createdAt: Date
  _count: PurchaseOrderProductCountAggregateOutputType | null
  _avg: PurchaseOrderProductAvgAggregateOutputType | null
  _sum: PurchaseOrderProductSumAggregateOutputType | null
  _min: PurchaseOrderProductMinAggregateOutputType | null
  _max: PurchaseOrderProductMaxAggregateOutputType | null
}

type GetPurchaseOrderProductGroupByPayload<T extends PurchaseOrderProductGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PurchaseOrderProductGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PurchaseOrderProductGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PurchaseOrderProductGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PurchaseOrderProductGroupByOutputType[P]>
      }
    >
  >



export type PurchaseOrderProductWhereInput = {
  AND?: Prisma.PurchaseOrderProductWhereInput | Prisma.PurchaseOrderProductWhereInput[]
  OR?: Prisma.PurchaseOrderProductWhereInput[]
  NOT?: Prisma.PurchaseOrderProductWhereInput | Prisma.PurchaseOrderProductWhereInput[]
  id?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  productId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  quantity?: Prisma.IntFilter<"PurchaseOrderProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"PurchaseOrderProduct"> | Date | string
  purchaseOrder?: Prisma.XOR<Prisma.PurchaseOrderScalarRelationFilter, Prisma.PurchaseOrderWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}

export type PurchaseOrderProductOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  purchaseOrder?: Prisma.PurchaseOrderOrderByWithRelationInput
  product?: Prisma.ProductOrderByWithRelationInput
}

export type PurchaseOrderProductWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PurchaseOrderProductWhereInput | Prisma.PurchaseOrderProductWhereInput[]
  OR?: Prisma.PurchaseOrderProductWhereInput[]
  NOT?: Prisma.PurchaseOrderProductWhereInput | Prisma.PurchaseOrderProductWhereInput[]
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  productId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  quantity?: Prisma.IntFilter<"PurchaseOrderProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"PurchaseOrderProduct"> | Date | string
  purchaseOrder?: Prisma.XOR<Prisma.PurchaseOrderScalarRelationFilter, Prisma.PurchaseOrderWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}, "id">

export type PurchaseOrderProductOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.PurchaseOrderProductCountOrderByAggregateInput
  _avg?: Prisma.PurchaseOrderProductAvgOrderByAggregateInput
  _max?: Prisma.PurchaseOrderProductMaxOrderByAggregateInput
  _min?: Prisma.PurchaseOrderProductMinOrderByAggregateInput
  _sum?: Prisma.PurchaseOrderProductSumOrderByAggregateInput
}

export type PurchaseOrderProductScalarWhereWithAggregatesInput = {
  AND?: Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput | Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput[]
  OR?: Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput | Prisma.PurchaseOrderProductScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PurchaseOrderProduct"> | string
  purchaseOrderId?: Prisma.StringWithAggregatesFilter<"PurchaseOrderProduct"> | string
  productId?: Prisma.StringWithAggregatesFilter<"PurchaseOrderProduct"> | string
  quantity?: Prisma.IntWithAggregatesFilter<"PurchaseOrderProduct"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"PurchaseOrderProduct"> | Date | string
}

export type PurchaseOrderProductCreateInput = {
  id?: string
  quantity?: number
  createdAt?: Date | string
  purchaseOrder: Prisma.PurchaseOrderCreateNestedOneWithoutProductsInput
  product: Prisma.ProductCreateNestedOneWithoutPurchaseOrderProductsInput
}

export type PurchaseOrderProductUncheckedCreateInput = {
  id?: string
  purchaseOrderId: string
  productId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  purchaseOrder?: Prisma.PurchaseOrderUpdateOneRequiredWithoutProductsNestedInput
  product?: Prisma.ProductUpdateOneRequiredWithoutPurchaseOrderProductsNestedInput
}

export type PurchaseOrderProductUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductCreateManyInput = {
  id?: string
  purchaseOrderId: string
  productId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductListRelationFilter = {
  every?: Prisma.PurchaseOrderProductWhereInput
  some?: Prisma.PurchaseOrderProductWhereInput
  none?: Prisma.PurchaseOrderProductWhereInput
}

export type PurchaseOrderProductOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PurchaseOrderProductCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type PurchaseOrderProductAvgOrderByAggregateInput = {
  quantity?: Prisma.SortOrder
}

export type PurchaseOrderProductMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type PurchaseOrderProductMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type PurchaseOrderProductSumOrderByAggregateInput = {
  quantity?: Prisma.SortOrder
}

export type PurchaseOrderProductCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput> | Prisma.PurchaseOrderProductCreateWithoutProductInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyProductInputEnvelope
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
}

export type PurchaseOrderProductUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput> | Prisma.PurchaseOrderProductCreateWithoutProductInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyProductInputEnvelope
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
}

export type PurchaseOrderProductUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput> | Prisma.PurchaseOrderProductCreateWithoutProductInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutProductInput | Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyProductInputEnvelope
  set?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  update?: Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutProductInput | Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutProductInput | Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
}

export type PurchaseOrderProductUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput> | Prisma.PurchaseOrderProductCreateWithoutProductInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutProductInput | Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyProductInputEnvelope
  set?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  update?: Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutProductInput | Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutProductInput | Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
}

export type PurchaseOrderProductCreateNestedManyWithoutPurchaseOrderInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyPurchaseOrderInputEnvelope
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
}

export type PurchaseOrderProductUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyPurchaseOrderInputEnvelope
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
}

export type PurchaseOrderProductUpdateManyWithoutPurchaseOrderNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput[]
  upsert?: Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyPurchaseOrderInputEnvelope
  set?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  update?: Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
  updateMany?: Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutPurchaseOrderInput[]
  deleteMany?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
}

export type PurchaseOrderProductUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput[]
  upsert?: Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderProductCreateManyPurchaseOrderInputEnvelope
  set?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderProductWhereUniqueInput | Prisma.PurchaseOrderProductWhereUniqueInput[]
  update?: Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
  updateMany?: Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutPurchaseOrderInput | Prisma.PurchaseOrderProductUpdateManyWithWhereWithoutPurchaseOrderInput[]
  deleteMany?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
}

export type PurchaseOrderProductCreateWithoutProductInput = {
  id?: string
  quantity?: number
  createdAt?: Date | string
  purchaseOrder: Prisma.PurchaseOrderCreateNestedOneWithoutProductsInput
}

export type PurchaseOrderProductUncheckedCreateWithoutProductInput = {
  id?: string
  purchaseOrderId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductCreateOrConnectWithoutProductInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  create: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput>
}

export type PurchaseOrderProductCreateManyProductInputEnvelope = {
  data: Prisma.PurchaseOrderProductCreateManyProductInput | Prisma.PurchaseOrderProductCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type PurchaseOrderProductUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  update: Prisma.XOR<Prisma.PurchaseOrderProductUpdateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutProductInput>
}

export type PurchaseOrderProductUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateWithoutProductInput, Prisma.PurchaseOrderProductUncheckedUpdateWithoutProductInput>
}

export type PurchaseOrderProductUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.PurchaseOrderProductScalarWhereInput
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateManyMutationInput, Prisma.PurchaseOrderProductUncheckedUpdateManyWithoutProductInput>
}

export type PurchaseOrderProductScalarWhereInput = {
  AND?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
  OR?: Prisma.PurchaseOrderProductScalarWhereInput[]
  NOT?: Prisma.PurchaseOrderProductScalarWhereInput | Prisma.PurchaseOrderProductScalarWhereInput[]
  id?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  productId?: Prisma.StringFilter<"PurchaseOrderProduct"> | string
  quantity?: Prisma.IntFilter<"PurchaseOrderProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"PurchaseOrderProduct"> | Date | string
}

export type PurchaseOrderProductCreateWithoutPurchaseOrderInput = {
  id?: string
  quantity?: number
  createdAt?: Date | string
  product: Prisma.ProductCreateNestedOneWithoutPurchaseOrderProductsInput
}

export type PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput = {
  id?: string
  productId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductCreateOrConnectWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  create: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput>
}

export type PurchaseOrderProductCreateManyPurchaseOrderInputEnvelope = {
  data: Prisma.PurchaseOrderProductCreateManyPurchaseOrderInput | Prisma.PurchaseOrderProductCreateManyPurchaseOrderInput[]
  skipDuplicates?: boolean
}

export type PurchaseOrderProductUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  update: Prisma.XOR<Prisma.PurchaseOrderProductUpdateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedUpdateWithoutPurchaseOrderInput>
  create: Prisma.XOR<Prisma.PurchaseOrderProductCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedCreateWithoutPurchaseOrderInput>
}

export type PurchaseOrderProductUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateWithoutPurchaseOrderInput, Prisma.PurchaseOrderProductUncheckedUpdateWithoutPurchaseOrderInput>
}

export type PurchaseOrderProductUpdateManyWithWhereWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderProductScalarWhereInput
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateManyMutationInput, Prisma.PurchaseOrderProductUncheckedUpdateManyWithoutPurchaseOrderInput>
}

export type PurchaseOrderProductCreateManyProductInput = {
  id?: string
  purchaseOrderId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  purchaseOrder?: Prisma.PurchaseOrderUpdateOneRequiredWithoutProductsNestedInput
}

export type PurchaseOrderProductUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductCreateManyPurchaseOrderInput = {
  id?: string
  productId: string
  quantity?: number
  createdAt?: Date | string
}

export type PurchaseOrderProductUpdateWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneRequiredWithoutPurchaseOrderProductsNestedInput
}

export type PurchaseOrderProductUncheckedUpdateWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PurchaseOrderProductUncheckedUpdateManyWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type PurchaseOrderProductSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  productId?: boolean
  quantity?: boolean
  createdAt?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderProduct"]>

export type PurchaseOrderProductSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  productId?: boolean
  quantity?: boolean
  createdAt?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderProduct"]>

export type PurchaseOrderProductSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  productId?: boolean
  quantity?: boolean
  createdAt?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderProduct"]>

export type PurchaseOrderProductSelectScalar = {
  id?: boolean
  purchaseOrderId?: boolean
  productId?: boolean
  quantity?: boolean
  createdAt?: boolean
}

export type PurchaseOrderProductOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "purchaseOrderId" | "productId" | "quantity" | "createdAt", ExtArgs["result"]["purchaseOrderProduct"]>
export type PurchaseOrderProductInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type PurchaseOrderProductIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type PurchaseOrderProductIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $PurchaseOrderProductPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PurchaseOrderProduct"
  objects: {
    purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs>
    product: Prisma.$ProductPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    purchaseOrderId: string
    productId: string
    quantity: number
    createdAt: Date
  }, ExtArgs["result"]["purchaseOrderProduct"]>
  composites: {}
}

export type PurchaseOrderProductGetPayload<S extends boolean | null | undefined | PurchaseOrderProductDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload, S>

export type PurchaseOrderProductCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PurchaseOrderProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PurchaseOrderProductCountAggregateInputType | true
  }

export interface PurchaseOrderProductDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrderProduct'], meta: { name: 'PurchaseOrderProduct' } }
  /**
   * Find zero or one PurchaseOrderProduct that matches the filter.
   * @param {PurchaseOrderProductFindUniqueArgs} args - Arguments to find a PurchaseOrderProduct
   * @example
   * // Get one PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PurchaseOrderProductFindUniqueArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PurchaseOrderProduct that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PurchaseOrderProductFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrderProduct
   * @example
   * // Get one PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PurchaseOrderProductFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PurchaseOrderProduct that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductFindFirstArgs} args - Arguments to find a PurchaseOrderProduct
   * @example
   * // Get one PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PurchaseOrderProductFindFirstArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductFindFirstArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PurchaseOrderProduct that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrderProduct
   * @example
   * // Get one PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PurchaseOrderProductFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PurchaseOrderProducts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PurchaseOrderProducts
   * const purchaseOrderProducts = await prisma.purchaseOrderProduct.findMany()
   * 
   * // Get first 10 PurchaseOrderProducts
   * const purchaseOrderProducts = await prisma.purchaseOrderProduct.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const purchaseOrderProductWithIdOnly = await prisma.purchaseOrderProduct.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PurchaseOrderProductFindManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PurchaseOrderProduct.
   * @param {PurchaseOrderProductCreateArgs} args - Arguments to create a PurchaseOrderProduct.
   * @example
   * // Create one PurchaseOrderProduct
   * const PurchaseOrderProduct = await prisma.purchaseOrderProduct.create({
   *   data: {
   *     // ... data to create a PurchaseOrderProduct
   *   }
   * })
   * 
   */
  create<T extends PurchaseOrderProductCreateArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductCreateArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PurchaseOrderProducts.
   * @param {PurchaseOrderProductCreateManyArgs} args - Arguments to create many PurchaseOrderProducts.
   * @example
   * // Create many PurchaseOrderProducts
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PurchaseOrderProductCreateManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PurchaseOrderProducts and returns the data saved in the database.
   * @param {PurchaseOrderProductCreateManyAndReturnArgs} args - Arguments to create many PurchaseOrderProducts.
   * @example
   * // Create many PurchaseOrderProducts
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PurchaseOrderProducts and only return the `id`
   * const purchaseOrderProductWithIdOnly = await prisma.purchaseOrderProduct.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PurchaseOrderProductCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PurchaseOrderProduct.
   * @param {PurchaseOrderProductDeleteArgs} args - Arguments to delete one PurchaseOrderProduct.
   * @example
   * // Delete one PurchaseOrderProduct
   * const PurchaseOrderProduct = await prisma.purchaseOrderProduct.delete({
   *   where: {
   *     // ... filter to delete one PurchaseOrderProduct
   *   }
   * })
   * 
   */
  delete<T extends PurchaseOrderProductDeleteArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductDeleteArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PurchaseOrderProduct.
   * @param {PurchaseOrderProductUpdateArgs} args - Arguments to update one PurchaseOrderProduct.
   * @example
   * // Update one PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PurchaseOrderProductUpdateArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductUpdateArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PurchaseOrderProducts.
   * @param {PurchaseOrderProductDeleteManyArgs} args - Arguments to filter PurchaseOrderProducts to delete.
   * @example
   * // Delete a few PurchaseOrderProducts
   * const { count } = await prisma.purchaseOrderProduct.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PurchaseOrderProductDeleteManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PurchaseOrderProducts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PurchaseOrderProducts
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PurchaseOrderProductUpdateManyArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PurchaseOrderProducts and returns the data updated in the database.
   * @param {PurchaseOrderProductUpdateManyAndReturnArgs} args - Arguments to update many PurchaseOrderProducts.
   * @example
   * // Update many PurchaseOrderProducts
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PurchaseOrderProducts and only return the `id`
   * const purchaseOrderProductWithIdOnly = await prisma.purchaseOrderProduct.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PurchaseOrderProductUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PurchaseOrderProduct.
   * @param {PurchaseOrderProductUpsertArgs} args - Arguments to update or create a PurchaseOrderProduct.
   * @example
   * // Update or create a PurchaseOrderProduct
   * const purchaseOrderProduct = await prisma.purchaseOrderProduct.upsert({
   *   create: {
   *     // ... data to create a PurchaseOrderProduct
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PurchaseOrderProduct we want to update
   *   }
   * })
   */
  upsert<T extends PurchaseOrderProductUpsertArgs>(args: Prisma.SelectSubset<T, PurchaseOrderProductUpsertArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderProductClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PurchaseOrderProducts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductCountArgs} args - Arguments to filter PurchaseOrderProducts to count.
   * @example
   * // Count the number of PurchaseOrderProducts
   * const count = await prisma.purchaseOrderProduct.count({
   *   where: {
   *     // ... the filter for the PurchaseOrderProducts we want to count
   *   }
   * })
  **/
  count<T extends PurchaseOrderProductCountArgs>(
    args?: Prisma.Subset<T, PurchaseOrderProductCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PurchaseOrderProductCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PurchaseOrderProduct.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PurchaseOrderProductAggregateArgs>(args: Prisma.Subset<T, PurchaseOrderProductAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderProductAggregateType<T>>

  /**
   * Group by PurchaseOrderProduct.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderProductGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PurchaseOrderProductGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PurchaseOrderProductGroupByArgs['orderBy'] }
      : { orderBy?: PurchaseOrderProductGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PurchaseOrderProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PurchaseOrderProduct model
 */
readonly fields: PurchaseOrderProductFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PurchaseOrderProduct.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PurchaseOrderProductClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  purchaseOrder<T extends Prisma.PurchaseOrderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PurchaseOrderDefaultArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PurchaseOrderProduct model
 */
export interface PurchaseOrderProductFieldRefs {
  readonly id: Prisma.FieldRef<"PurchaseOrderProduct", 'String'>
  readonly purchaseOrderId: Prisma.FieldRef<"PurchaseOrderProduct", 'String'>
  readonly productId: Prisma.FieldRef<"PurchaseOrderProduct", 'String'>
  readonly quantity: Prisma.FieldRef<"PurchaseOrderProduct", 'Int'>
  readonly createdAt: Prisma.FieldRef<"PurchaseOrderProduct", 'DateTime'>
}
    

// Custom InputTypes
/**
 * PurchaseOrderProduct findUnique
 */
export type PurchaseOrderProductFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderProduct to fetch.
   */
  where: Prisma.PurchaseOrderProductWhereUniqueInput
}

/**
 * PurchaseOrderProduct findUniqueOrThrow
 */
export type PurchaseOrderProductFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderProduct to fetch.
   */
  where: Prisma.PurchaseOrderProductWhereUniqueInput
}

/**
 * PurchaseOrderProduct findFirst
 */
export type PurchaseOrderProductFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderProduct to fetch.
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderProducts to fetch.
   */
  orderBy?: Prisma.PurchaseOrderProductOrderByWithRelationInput | Prisma.PurchaseOrderProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PurchaseOrderProducts.
   */
  cursor?: Prisma.PurchaseOrderProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PurchaseOrderProducts.
   */
  distinct?: Prisma.PurchaseOrderProductScalarFieldEnum | Prisma.PurchaseOrderProductScalarFieldEnum[]
}

/**
 * PurchaseOrderProduct findFirstOrThrow
 */
export type PurchaseOrderProductFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderProduct to fetch.
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderProducts to fetch.
   */
  orderBy?: Prisma.PurchaseOrderProductOrderByWithRelationInput | Prisma.PurchaseOrderProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PurchaseOrderProducts.
   */
  cursor?: Prisma.PurchaseOrderProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PurchaseOrderProducts.
   */
  distinct?: Prisma.PurchaseOrderProductScalarFieldEnum | Prisma.PurchaseOrderProductScalarFieldEnum[]
}

/**
 * PurchaseOrderProduct findMany
 */
export type PurchaseOrderProductFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderProducts to fetch.
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderProducts to fetch.
   */
  orderBy?: Prisma.PurchaseOrderProductOrderByWithRelationInput | Prisma.PurchaseOrderProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PurchaseOrderProducts.
   */
  cursor?: Prisma.PurchaseOrderProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderProducts.
   */
  skip?: number
  distinct?: Prisma.PurchaseOrderProductScalarFieldEnum | Prisma.PurchaseOrderProductScalarFieldEnum[]
}

/**
 * PurchaseOrderProduct create
 */
export type PurchaseOrderProductCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * The data needed to create a PurchaseOrderProduct.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderProductCreateInput, Prisma.PurchaseOrderProductUncheckedCreateInput>
}

/**
 * PurchaseOrderProduct createMany
 */
export type PurchaseOrderProductCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PurchaseOrderProducts.
   */
  data: Prisma.PurchaseOrderProductCreateManyInput | Prisma.PurchaseOrderProductCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PurchaseOrderProduct createManyAndReturn
 */
export type PurchaseOrderProductCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * The data used to create many PurchaseOrderProducts.
   */
  data: Prisma.PurchaseOrderProductCreateManyInput | Prisma.PurchaseOrderProductCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PurchaseOrderProduct update
 */
export type PurchaseOrderProductUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * The data needed to update a PurchaseOrderProduct.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateInput, Prisma.PurchaseOrderProductUncheckedUpdateInput>
  /**
   * Choose, which PurchaseOrderProduct to update.
   */
  where: Prisma.PurchaseOrderProductWhereUniqueInput
}

/**
 * PurchaseOrderProduct updateMany
 */
export type PurchaseOrderProductUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PurchaseOrderProducts.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateManyMutationInput, Prisma.PurchaseOrderProductUncheckedUpdateManyInput>
  /**
   * Filter which PurchaseOrderProducts to update
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * Limit how many PurchaseOrderProducts to update.
   */
  limit?: number
}

/**
 * PurchaseOrderProduct updateManyAndReturn
 */
export type PurchaseOrderProductUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * The data used to update PurchaseOrderProducts.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderProductUpdateManyMutationInput, Prisma.PurchaseOrderProductUncheckedUpdateManyInput>
  /**
   * Filter which PurchaseOrderProducts to update
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * Limit how many PurchaseOrderProducts to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PurchaseOrderProduct upsert
 */
export type PurchaseOrderProductUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * The filter to search for the PurchaseOrderProduct to update in case it exists.
   */
  where: Prisma.PurchaseOrderProductWhereUniqueInput
  /**
   * In case the PurchaseOrderProduct found by the `where` argument doesn't exist, create a new PurchaseOrderProduct with this data.
   */
  create: Prisma.XOR<Prisma.PurchaseOrderProductCreateInput, Prisma.PurchaseOrderProductUncheckedCreateInput>
  /**
   * In case the PurchaseOrderProduct was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PurchaseOrderProductUpdateInput, Prisma.PurchaseOrderProductUncheckedUpdateInput>
}

/**
 * PurchaseOrderProduct delete
 */
export type PurchaseOrderProductDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
  /**
   * Filter which PurchaseOrderProduct to delete.
   */
  where: Prisma.PurchaseOrderProductWhereUniqueInput
}

/**
 * PurchaseOrderProduct deleteMany
 */
export type PurchaseOrderProductDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PurchaseOrderProducts to delete
   */
  where?: Prisma.PurchaseOrderProductWhereInput
  /**
   * Limit how many PurchaseOrderProducts to delete.
   */
  limit?: number
}

/**
 * PurchaseOrderProduct without action
 */
export type PurchaseOrderProductDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderProduct
   */
  select?: Prisma.PurchaseOrderProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderProduct
   */
  omit?: Prisma.PurchaseOrderProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderProductInclude<ExtArgs> | null
}
